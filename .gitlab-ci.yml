image: docker:git
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay
  PROJECT_NAME: waveview4
  VERSION: ${CI_COMMIT_TAG}
  DOCKER_HOST: "tcp://localhost:2375"

cache:
  paths:
    - dist
    - out
    - node_modules

stages:
  - build
  - deploy_job
  - upload

build:
  image: docker.dtwave-inc.com/aibox/nodejs:12.22.1-alpine
  stage: build
  only:
    - develop
  script:
    - rm -rf out default package-lock.json
    - npm install --registry=http://r.dtwave-inc.com
    - npm config set unsafe-perm true
    - npm run build

deploy_job:
  stage: deploy_job
  image: alpine:latest
  variables:
    # 跳过 git 操作，加快流水线执行速度，本 job 不需要获取仓库代码
    GIT_STRATEGY: none
  only:
    - develop
  before_script:
    # 更换 alpine apk 源为阿里源
    - sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories
    # 安装 sshpass，sshpass 可以将密码传入 ssh，免去交互式输入密码
    - apk add --update --no-cache openssh sshpass
  script:
    - sshpass -p $TEST_SERVER_XVR_PASSWORD scp -P 22818 -T -o StrictHostKeyChecking=no -r dist/* deploy@$TEST_SERVER_IP:/data/waveview-server4/static/waveview-front4/
    - sshpass -p $TEST_SERVER_XVR_PASSWORD ssh -p 22818 -T -o StrictHostKeyChecking=no deploy@$TEST_SERVER_IP "node /home/deploy/waveview/webhook/hook.js front $CI_COMMIT_REF_NAME $CI_PROJECT_URL/commit/$CI_COMMIT_SHA"

upload:
  image: docker.dtwave-inc.com/library/mc
  stage: upload
  only:
    - tags
  cache:
    paths:
      - out
  dependencies:
    - build
  script:
    - ls
    - mc mb dtwave-inc/waveview/front/waveview4/${CI_COMMIT_TAG}
    - mc cp out/waveview-server4.tgz dtwave-inc/waveview/front/waveview4/${CI_COMMIT_TAG}/
